extends layout

block content
    div(class="profile_bg" style="border:1px solid black;")
        div(id="nav" style="border:1px solid black;")
            span#greeting
            span#user #{x.username}
            a#logout(href='/user/logout') Logout
    //- img(class="profile_bg" src="/images/profileBG.jpg")
    //- nav(style="border:1px solid black;")
    //-     ul(class="navMain")
    //-         li
    //-             a(class="navA" href="#") Home
    //-             ul(class="drop menu1")
    //-                 li
    //-                     a(class="navA" href="/profile" style="margin-top:2px;") Profile
    //-                 li
    //-                     a(class="navA" href="/intro") About us


    div(id="main" class="row" style="border:1px solid black;")
        div(id="userInfo" class="col-sm-5 " style="border:1px solid black;")
            if (x)
                div(id="personalInfo" class="jumbotron jumbotron-fluid" style="box-shadow:5px 5px 10px gray;")
                    div(id="d1" style="margin-bottom:40px; padding-left:20px;")
                        img(class="user-pic" src="./images/default-user-image.png")
                        div#userContact
                            p#username USER : #{x.username}   
                            p#firstname first name : #{x.firstname}   
                            p#lastname last name : #{x.lastname} 
                            p#age age : #{x.age}
                            p#gender gender : #{x.gender}
                            a#edit(href='/profile/edit') EDIT PROFILE
                    hr
                    div(id="d2" class="row" style="margin-top:20px; padding-left:20px;")
                        div(id="userData"  class="col-sm-5" )
                            p#height height : #{x.height} cm
                            p#weight weight : #{x.weight} kg
                            

                        div(id="suggestion-d" class="col-sm-5")
                            p#suggestion Daily Calory is : #{result} kcal
                    button(type="button" id="showUpdate" class="btn btn-info" style="margin-left:20px; text-align:center") UPDATE WEIGHT
                    div(id="changeWeight" style="margin-left:20px;")
                        input(id="weightInput" placeholder = "  NEW WEIGHT" style="margin-right:10px")
                        button(type="button" id="submitWeight" class="btn btn-info btn-sm") UPDATE
                        button(type="button" id="cancelWeight" class="btn btn-dark btn-sm" style="margin-left:5px") CANCEL
            hr
            p(class="intake-input") What did you eat today?

            div#dailyResult

            div#dailyTotal


            


            input(id = "forTotal", style = "visibility:hidden")
            div#input_form
                select(name="ds",class="input-ds" id = "ds")
                    option(value="ads" selected="selected") From All Data Source
                    option(value="Standard Reference") Standard Reference
                    option(value="Branded Food Products") Branded Food Products
                input(id="intakeInputBox")
                span
                    button#intake-search search
                span
                    button#intake-submit submit

            div#searchResult
        div(id="graphInfo" class="col-sm-6  jumbotron jumbotron-fluid" style="border:1px solid black; box-shadow:5px 5px 10px gray;")
            div(id="tableDiv" class="table-responsive")
                table(id="result_table" class="table table-striped")
                    thead(class="thead-dark")
                        tr
                            th user
                            th calory
                            th weight
                            th createdAt
                            th
                    tbody
                        each calory in calories
                            tr(id=`${calory._id}`)
                                td=calory.user
                                td=calory.calory
                                td=calory.weight
                                td=calory.createdAt
                                td
                                    button(class="deleteTotal")(tid = calory._id) delete
            span#showTable show table
            span#hideTable hide table
            hr
            div(id="forCal" style="margin-top:20px;")
                canvas(id="calChart" )
            hr
            div(id='forWeight' style="margin-top:20px;")
                canvas(id="weightChart" )
        //- div#liveChat
    

    a#gochat(href='/chat') Chat
    br
    br
    

    footer
    //- a#logout(href='/user/logout') Logout

block script
    //- script(src="/scripts/socket.io-client/dist/socket.io.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js")
    script(src="/js/main.js")
    
    script.
        const cal = !{JSON.stringify(calories)};
        const user = !{JSON.stringify(x)};
        const r = !{JSON.stringify(result)};




        //- console.log(cal);

        var caldata=[];
        var weightdata=[];
        var callable=[];
        var dailyTotal = 0;
        var day = "";
        var index = 0;
        var healthyCal = [];
        console.log(callable);
        //inserting calory and date data into graph
        while(index<cal.length-1 ||  cal.length == 1 ){
            if(cal.length == 1){
                console.log(cal);
                caldata.push(cal[index].calory);
                callable.push(cal[index].createdAt.substring(5,10));
                healthyCal.push(r);
                weightdata.push(cal[index].weight);
                break;
            }else{
                if( (cal[index].createdAt.substring(5,10) !== cal[index+1].createdAt.substring(5,10))  && ( (index+1) < cal.length-1 )   ) {
                    caldata.push(cal[index].calory);
                    callable.push(cal[index].createdAt.substring(5,10));
                    healthyCal.push(r);
                    weightdata.push(cal[index].weight);
                    index++;
                }else if((cal[index].createdAt.substring(5,10) !== cal[index+1].createdAt.substring(5,10)) && ( (index+1) == cal.length-1) ){
                    caldata.push(cal[index].calory);
                    callable.push(cal[index].createdAt.substring(5,10));
                    healthyCal.push(r);
                    caldata.push(cal[index+1].calory);
                    callable.push(cal[index+1].createdAt.substring(5,10));
                    healthyCal.push(r);
                    weightdata.push(cal[index].weight);
                    weightdata.push(cal[index+1].weight);
                    index++;
                }else{ 
                    for(j=index;j<cal.length-1;j++){
                        if ( (cal[j].createdAt.substring(5,10) === cal[j+1].createdAt.substring(5,10) )     &&   ((j+1) < cal.length-1)    )   {
                            var v = parseInt(cal[j].calory);
                            dailyTotal = dailyTotal + v;
                        }else if ( (cal[j].createdAt.substring(5,10) === cal[j+1].createdAt.substring(5,10) )     &&   ((j+1) == cal.length-1)    ){
                            
                            var v = parseInt(cal[j].calory);
                            dailyTotal = dailyTotal + v;
                            var vl = parseInt(cal[j+1].calory);
                            dailyTotal = dailyTotal + vl;
                            var c = dailyTotal.toString();
                            caldata.push(c);
                            callable.push(cal[j].createdAt.substring(5,10));
                            weightdata.push(cal[j+1].weight);
                            healthyCal.push(r);
                            index = j+111;
                            break;
                        }else{
                            var v = parseInt(cal[j].calory);
                            
                            dailyTotal = dailyTotal + v;
                            var c = dailyTotal.toString();
                            caldata.push(c);
                            callable.push(cal[j].createdAt.substring(5,10));
                            weightdata.push(cal[j].weight);
                            healthyCal.push(r);
                            index = j+1;
                            if (index == cal.length-1){
                                caldata.push(cal[index].calory);
                                callable.push(cal[index].createdAt.substring(5,10));
                                weightdata.push(cal[index].weight);
                                healthyCal.push(r);
                                index = 99999;
                            }
                            break;
                        }    
                    }
                    dailyTotal = 0;

                }
            }

            
        }
        console.log(callable);
        console.log(weightdata);
        



        //draw graph
        var ctx = document.getElementById("calChart").getContext('2d');
        var ctx2 = document.getElementById("weightChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: callable,
                datasets: [{
                    label: 'Intake Calories',
                    data: caldata,
                    //- backgroundColor: ['rgba(255,255,255,1)'
                    //- ],
                    //- borderColor: [
                    //-     'rgba(0,0,0,5)'
                    //- ],
                    
                    borderColor:'rgba(0,0,0,1)',
                    borderWidth: 1,
                    fill:false
                },{
                    label: 'GOAL for the day',
                    data: healthyCal,
                    borderColor:'rgba(255,0,17,1)',
                    borderWidth: 1,
                    fill:false

                }
                
                ]
            },
            options: {
                events:['mousemove','touched'],
                tooltips:{
                    mode:'index',
                },
                scales: {
                    yAxes: [{
                        
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });


        var myChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: callable,
                datasets: [{
                    label: 'Weights',
                    data: weightdata,
                    borderColor:'rgba(0,0,0,1)',
                    borderWidth: 1,
                    fill:false
                }
                ]
            },
            options: {
                events:['mousemove','touched'],
                tooltips:{
                    mode:'index',
                },
                scales: {
                    yAxes: [{
                        
                        ticks: {
                            beginAtZero:false
                        }
                    }]
                }
            }
        });
        



        //submit daily calory to database
        //- const socket = io();
        //- $('#intake-submit').click(function(e) {
        //-     socket.emit('daily calory', { calory: $('#forTotal').val(), user: user.username });
        //-     window.alert("saved to database!");
        //-     location.reload();
        //- })

        $('#intake-submit').click(function(){
            var uweight = user.weight;
            var uname = user.username;
            var ucal = $('#forTotal').val();

            $.ajax({
                type:'POST',
                url:'/user/save/calory/'+uname+'/'+uweight+'/'+ucal,
                success:function(res){
                    if(res.result === 'success'){
                        window.alert("Saved!");
                            //- $('#weight').html("weight : "+newWeight+" kg")
                            //- $('#showUpdate').show();
                            //- $('#changeWeight').hide();
                        location.reload();
                    }
                }

            })
        })






        $('#submitWeight').click(function(){
            var newWeight = $('#weightInput').val();
            $.ajax({
                type:'POST',
                url:'/students/update/weight/'+user._id+'/'+newWeight,
                success:function(res){
                    if(res.result === 'success'){
                        window.alert("Updated!");
                        //- $('#weight').html("weight : "+newWeight+" kg")
                        //- $('#showUpdate').show();
                        //- $('#changeWeight').hide();
                        location.reload();
                    }
                }
            })
            
        })

        //delete daily calory from database
        $('.deleteTotal').click(function(e){
            const tid = $(this).attr('tid');
            $.ajax({
                type:'POST',
                url:'/students/delete',
                data:{tid},
                success:function(res){
                    if(res.result === 'success'){
                        window.alert("deleted!");
                        //- console.log(tid);
                        
                        $('#' +tid).remove();
                        
                        
                    }
                }
            })
        })



        



